<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heipiao.api.v2.mapper.HaveFishMapper">
	<resultMap type="HaveFish" id="haveFishResultMap">
		<id column="f_id" property="id" />
		<result column="f_uid" property="uid"/>
		<result column="f_user_nickname" property="nickName" />
		<result column="f_user_portriat" property="portriat" />
		<result column="f_title" property="title" />
		<result column="f_type" property="type" /> 
		<result column="f_site_base_name" property="fishSiteName" />
		<result column="f_phone" property="phone" />
		<result column="f_url" property="url" />
		<result column="f_publish_time" property="publishTime" />
		<result column="f_province_id" property="provinceId" />
		<result column="f_province_name" property="provinceName" />
		<result column="f_city_id" property="cityId" />
		<result column="f_city_name" property="cityName" />
		<result column="f_is_default" property="isDefault" />
		<result column="f_is_display" property="isDisplay" />
		<result column="dz" property="haveFishLikes" />
		<result column="duration" property="duration" />
		<collection property="haveFishComments"
			ofType="com.heipiao.api.v2.domain.HaveFishComment" column="f_id" select="getHaveFishComments">
		</collection>
	</resultMap>
	
	<resultMap type="HaveFish" id="haveFishListResultMap">
		<id column="f_id" property="id" />
		<result column="f_uid" property="uid" />
		<result column="f_user_nickname" property="nickName" />
		<result column="f_user_portriat" property="portriat" />
		<result column="f_title" property="title" />
		<result column="f_type" property="type" /> 
		<result column="f_site_base_name" property="fishSiteName" />
		<result column="f_phone" property="phone" />
		<result column="f_url" property="url" />
		<result column="f_publish_time" property="publishTime" />
		<result column="duration" property="duration" />
	</resultMap>
	
	<select id="getHaveFishComments" resultMap="com.heipiao.api.v2.mapper.HaveFishCommentMapper.newhaveFishCommentResultMap">
		select f_comment,f_user_nickname as nicknam from t_have_fish_comments a 
		left join t_user b on a.f_uid=b.f_uid
		where a.f_have_fish_id=#{id}
	</select>
	
	<!-- 获取有鱼详情列表 -->
	<select id="getHaveFishList" resultMap="haveFishResultMap">
		SELECT a.*,e.dz,
		round(6370996.81 * 2 * asin(sqrt(
			pow(sin(((#{lat} * PI() /180.0) - (f_latitude * PI() /180.0))/2),2)
			+ cos(#{lat} * PI() /180.0)
			* cos(f_latitude * PI() /180.0)
			* pow(sin(((#{lon} - f_longitude) * PI()/180.0)/2),2)))) as duration
		 from (SELECT f.*,h.f_user_nickname,h.f_user_portriat FROM t_have_fish f left join t_user h on f.f_uid = h.f_uid where f.f_uid = #{uid} LIMIT #{start},1) a
		LEFT JOIN 
		(select f_have_fish_id,GROUP_CONCAT(u.f_user_nickname) dz from t_have_fish_likes 
		LEFT JOIN t_user u ON f_like_uid = f_uid
		GROUP BY f_have_fish_id) e
		on e.f_have_fish_id = a.f_id where a.f_is_display = 0 
		order by duration
	</select>
	<!-- 获取有鱼默认列表 -->
	<select id="getHaveFishAllList" resultMap="haveFishListResultMap">
		select f_id,f_uid,a.f_user_nickname,f_user_portriat,f_title,f_type,f_site_base_name,f_phone,f_url,f_publish_time,duration from
		(SELECT f.f_id,f.f_uid,f.f_title,f.f_type,f.f_site_base_name,f.f_phone,f.f_url,f.f_publish_time,h.f_user_nickname,h.f_user_portriat,f.f_is_display,
		round(6370996.81 * 2 * asin(sqrt(
			pow(sin(((#{lat} * PI() /180.0) - (f_latitude * PI() /180.0))/2),2)
			+ cos(#{lat} * PI() /180.0)
			* cos(f_latitude * PI() /180.0)
			* pow(sin(((#{lon} - f_longitude) * PI()/180.0)/2),2)))) as duration
			from t_have_fish f
			left join t_user h on f.f_uid = h.f_uid) a where a.f_is_display = 0
			GROUP BY a.f_uid ORDER BY case when f_uid = #{uid} then 0 else 1 end, duration
			LIMIT #{start},#{size}
	</select>
	
	<insert id="addHaveFish">
		insert into t_have_fish(
			f_uid,f_title,f_type,f_phone,f_site_base_name,f_url,f_longitude,f_latitude,f_is_default,f_publish_time,f_province_id,f_province_name,f_city_id,f_city_name) values
			(#{uid},#{title},#{type},#{phone},#{fishSiteName},#{url},#{lon},#{lat},#{isDefault},#{publishTime},#{provinceId},#{provinceName},#{cityId},#{cityName})
	</insert>
	<!-- occ获取有鱼列表 -->
	<select id="getHaveFishOccList" resultMap="haveFishListResultMap">
		select a.*,h.f_user_nickname,h.f_user_portriat FROM t_have_fish a
		left join t_user h on a.f_uid = h.f_uid
		<where>
			<if test="regBegin != null and regEnd != null">
				AND f_publish_time BETWEEN #{regBegin} AND date_add(#{regEnd}, interval 1 day)
			</if>
			<if test="provinceId != null">
				AND f_province_id = #{provinceId}
			</if>
			<if test="cityId != null">
				AND f_city_id = #{cityId}
			</if>
			<if test="type != null">
				AND f_type = #{type}
			</if>
			<if test="nickName != null">
				AND h.f_user_nickname = #{nickName}
			</if>
		</where>
		limit #{start},#{size}
	</select>
	
	<select id="getHaveFishOccListCountForPage" resultType="Integer">
		select COUNT(*) FROM t_have_fish a
		left join t_user h on a.f_uid = h.f_uid
		<where>
			<if test="regBegin != null and regEnd != null">
				AND f_publish_time BETWEEN #{regBegin} AND date_add(#{regEnd}, interval 1 day)
			</if>
			<if test="provinceId != null">
				AND f_province_id = #{provinceId}
			</if>
			<if test="cityId != null">
				AND f_city_id = #{cityId}
			</if>
			<if test="type != null">
				AND f_type = #{type}
			</if>
			<if test="nickName != null">
				AND h.f_user_nickname = #{nickName}
			</if>
		</where>
	</select>
	
	<update id="updateHaveFish">
		update t_have_fish
		set f_is_display = #{isDisplay}
		where f_id = #{id}
	</update>
	
	<!-- 获取有鱼详情列表 -->
	<select id="getOneHaveFish" resultMap="haveFishResultMap">
		SELECT a.*,e.dz
		 from (SELECT f.*,h.f_user_nickname,h.f_user_portriat FROM t_have_fish f left join t_user h on f.f_uid = h.f_uid where f.f_id = #{id}) a
		LEFT JOIN 
		(select f_have_fish_id,GROUP_CONCAT(u.f_user_nickname) dz from t_have_fish_likes 
		LEFT JOIN t_user u ON f_like_uid = f_uid
		GROUP BY f_have_fish_id) e
		on e.f_have_fish_id = a.f_id 
	</select>
	
</mapper>
